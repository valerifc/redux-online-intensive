// Core
import io from 'socket.io-client';

// Config
import { ROOT_URL, groupId } from '../REST';

/**
 * @info Привяжем результат к идентификатору socket.
 * Этот идентификатор мы будем использовать для всех операций с веб-сокетом во всем приложении.
 */
export const socket = io(ROOT_URL, {
    path: '/redux/ws',
});

/**
 * @info Для инициализации веб сокета.
 * Веб сокет работает по событийной модели,
 * т.е. сокет умеет прослушивать и генерировать разного рода события.
 * Например, для инициализации веб сокета можно вызвать метод emit.
 * Первый аргумент emit - строка с именем события.
 * Второй аргумент emit - данные события.
 * С помощью emit можно генерировать события.
 * Сервер находится в состоянии постоянного прослушивания событий.
 * Поэтому при создании события emit сервер его перехватит и обработает.
 */
export const joinSocketChannel = () => {
    const token = localStorage.getItem('token');

    socket.emit('join', { groupId, token });
};
